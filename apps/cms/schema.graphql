type Query {
  User(id: String!, draft: Boolean): User
  Users(draft: Boolean, where: User_where, limit: Int, page: Int, sort: String): Users
  docAccessUser(id: String!): usersDocAccess
  meUser: usersMe
  initializedUser: Boolean
  Category(id: String!, draft: Boolean): Category
  Categories(draft: Boolean, where: Category_where, limit: Int, page: Int, sort: String): Categories
  docAccessCategory(id: String!): categoriesDocAccess
  Post(id: String!, draft: Boolean): Post
  Posts(draft: Boolean, where: Post_where, limit: Int, page: Int, sort: String): Posts
  docAccessPost(id: String!): postsDocAccess
  versionPost(id: String): PostVersion
  versionsPosts(where: versionsPost_where, limit: Int, page: Int, sort: String): versionsPosts
  PayloadPreference(id: String!, draft: Boolean): PayloadPreference
  PayloadPreferences(draft: Boolean, where: PayloadPreference_where, limit: Int, page: Int, sort: String): PayloadPreferences
  docAccessPayloadPreference(id: String!): payload_preferencesDocAccess
  Access: Access
}

type User {
  id: String
  firstName: String
  lastName: String
  roles: [User_roles!]
  updatedAt: DateTime
  createdAt: DateTime
  email: EmailAddress!
  resetPasswordToken: String
  resetPasswordExpiration: DateTime
  salt: String
  hash: String
  loginAttempts: Float
  lockUntil: DateTime
  password: String!
}

enum User_roles {
  admin
  user
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
"""
scalar EmailAddress @specifiedBy(url: "https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address")

type Users {
  docs: [User]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input User_where {
  firstName: User_firstName_operator
  lastName: User_lastName_operator
  roles: User_roles_operator
  updatedAt: User_updatedAt_operator
  createdAt: User_createdAt_operator
  email: User_email_operator
  id: User_id_operator
  AND: [User_where_and]
  OR: [User_where_or]
}

input User_firstName_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input User_lastName_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input User_roles_operator {
  equals: User_roles_Input
  not_equals: User_roles_Input
  in: [User_roles_Input]
  not_in: [User_roles_Input]
  all: [User_roles_Input]
  exists: Boolean
}

enum User_roles_Input {
  admin
  user
}

input User_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input User_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input User_email_operator {
  equals: EmailAddress
  not_equals: EmailAddress
  like: EmailAddress
  contains: EmailAddress
  in: [EmailAddress]
  not_in: [EmailAddress]
  all: [EmailAddress]
}

input User_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input User_where_and {
  firstName: User_firstName_operator
  lastName: User_lastName_operator
  roles: User_roles_operator
  updatedAt: User_updatedAt_operator
  createdAt: User_createdAt_operator
  email: User_email_operator
  id: User_id_operator
  AND: [User_where_and]
  OR: [User_where_or]
}

input User_where_or {
  firstName: User_firstName_operator
  lastName: User_lastName_operator
  roles: User_roles_operator
  updatedAt: User_updatedAt_operator
  createdAt: User_createdAt_operator
  email: User_email_operator
  id: User_id_operator
  AND: [User_where_and]
  OR: [User_where_or]
}

type usersDocAccess {
  fields: UsersDocAccessFields
  create: UsersCreateDocAccess
  read: UsersReadDocAccess
  update: UsersUpdateDocAccess
  delete: UsersDeleteDocAccess
  unlock: UsersUnlockDocAccess
}

type UsersDocAccessFields {
  firstName: UsersDocAccessFields_firstName
  lastName: UsersDocAccessFields_lastName
  roles: UsersDocAccessFields_roles
  updatedAt: UsersDocAccessFields_updatedAt
  createdAt: UsersDocAccessFields_createdAt
  email: UsersDocAccessFields_email
  password: UsersDocAccessFields_password
}

type UsersDocAccessFields_firstName {
  create: UsersDocAccessFields_firstName_Create
  read: UsersDocAccessFields_firstName_Read
  update: UsersDocAccessFields_firstName_Update
  delete: UsersDocAccessFields_firstName_Delete
}

type UsersDocAccessFields_firstName_Create {
  permission: Boolean!
}

type UsersDocAccessFields_firstName_Read {
  permission: Boolean!
}

type UsersDocAccessFields_firstName_Update {
  permission: Boolean!
}

type UsersDocAccessFields_firstName_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_lastName {
  create: UsersDocAccessFields_lastName_Create
  read: UsersDocAccessFields_lastName_Read
  update: UsersDocAccessFields_lastName_Update
  delete: UsersDocAccessFields_lastName_Delete
}

type UsersDocAccessFields_lastName_Create {
  permission: Boolean!
}

type UsersDocAccessFields_lastName_Read {
  permission: Boolean!
}

type UsersDocAccessFields_lastName_Update {
  permission: Boolean!
}

type UsersDocAccessFields_lastName_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_roles {
  create: UsersDocAccessFields_roles_Create
  read: UsersDocAccessFields_roles_Read
  update: UsersDocAccessFields_roles_Update
  delete: UsersDocAccessFields_roles_Delete
}

type UsersDocAccessFields_roles_Create {
  permission: Boolean!
}

type UsersDocAccessFields_roles_Read {
  permission: Boolean!
}

type UsersDocAccessFields_roles_Update {
  permission: Boolean!
}

type UsersDocAccessFields_roles_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_updatedAt {
  create: UsersDocAccessFields_updatedAt_Create
  read: UsersDocAccessFields_updatedAt_Read
  update: UsersDocAccessFields_updatedAt_Update
  delete: UsersDocAccessFields_updatedAt_Delete
}

type UsersDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type UsersDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type UsersDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type UsersDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_createdAt {
  create: UsersDocAccessFields_createdAt_Create
  read: UsersDocAccessFields_createdAt_Read
  update: UsersDocAccessFields_createdAt_Update
  delete: UsersDocAccessFields_createdAt_Delete
}

type UsersDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type UsersDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type UsersDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type UsersDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_email {
  create: UsersDocAccessFields_email_Create
  read: UsersDocAccessFields_email_Read
  update: UsersDocAccessFields_email_Update
  delete: UsersDocAccessFields_email_Delete
}

type UsersDocAccessFields_email_Create {
  permission: Boolean!
}

type UsersDocAccessFields_email_Read {
  permission: Boolean!
}

type UsersDocAccessFields_email_Update {
  permission: Boolean!
}

type UsersDocAccessFields_email_Delete {
  permission: Boolean!
}

type UsersDocAccessFields_password {
  create: UsersDocAccessFields_password_Create
  read: UsersDocAccessFields_password_Read
  update: UsersDocAccessFields_password_Update
  delete: UsersDocAccessFields_password_Delete
}

type UsersDocAccessFields_password_Create {
  permission: Boolean!
}

type UsersDocAccessFields_password_Read {
  permission: Boolean!
}

type UsersDocAccessFields_password_Update {
  permission: Boolean!
}

type UsersDocAccessFields_password_Delete {
  permission: Boolean!
}

type UsersCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type UsersReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersUnlockDocAccess {
  permission: Boolean!
  where: JSONObject
}

type usersMe {
  collection: String
  exp: Int
  token: String
  user: User
}

type Category {
  id: String
  title: String
  updatedAt: DateTime
  createdAt: DateTime
}

type Categories {
  docs: [Category]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input Category_where {
  title: Category_title_operator
  updatedAt: Category_updatedAt_operator
  createdAt: Category_createdAt_operator
  id: Category_id_operator
  AND: [Category_where_and]
  OR: [Category_where_or]
}

input Category_title_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Category_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Category_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Category_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Category_where_and {
  title: Category_title_operator
  updatedAt: Category_updatedAt_operator
  createdAt: Category_createdAt_operator
  id: Category_id_operator
  AND: [Category_where_and]
  OR: [Category_where_or]
}

input Category_where_or {
  title: Category_title_operator
  updatedAt: Category_updatedAt_operator
  createdAt: Category_createdAt_operator
  id: Category_id_operator
  AND: [Category_where_and]
  OR: [Category_where_or]
}

type categoriesDocAccess {
  fields: CategoriesDocAccessFields
  create: CategoriesCreateDocAccess
  read: CategoriesReadDocAccess
  update: CategoriesUpdateDocAccess
  delete: CategoriesDeleteDocAccess
}

type CategoriesDocAccessFields {
  title: CategoriesDocAccessFields_title
  updatedAt: CategoriesDocAccessFields_updatedAt
  createdAt: CategoriesDocAccessFields_createdAt
}

type CategoriesDocAccessFields_title {
  create: CategoriesDocAccessFields_title_Create
  read: CategoriesDocAccessFields_title_Read
  update: CategoriesDocAccessFields_title_Update
  delete: CategoriesDocAccessFields_title_Delete
}

type CategoriesDocAccessFields_title_Create {
  permission: Boolean!
}

type CategoriesDocAccessFields_title_Read {
  permission: Boolean!
}

type CategoriesDocAccessFields_title_Update {
  permission: Boolean!
}

type CategoriesDocAccessFields_title_Delete {
  permission: Boolean!
}

type CategoriesDocAccessFields_updatedAt {
  create: CategoriesDocAccessFields_updatedAt_Create
  read: CategoriesDocAccessFields_updatedAt_Read
  update: CategoriesDocAccessFields_updatedAt_Update
  delete: CategoriesDocAccessFields_updatedAt_Delete
}

type CategoriesDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type CategoriesDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type CategoriesDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type CategoriesDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type CategoriesDocAccessFields_createdAt {
  create: CategoriesDocAccessFields_createdAt_Create
  read: CategoriesDocAccessFields_createdAt_Read
  update: CategoriesDocAccessFields_createdAt_Update
  delete: CategoriesDocAccessFields_createdAt_Delete
}

type CategoriesDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type CategoriesDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type CategoriesDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type CategoriesDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type CategoriesCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type CategoriesReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type CategoriesUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type CategoriesDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type Post {
  id: String
  title: String
  categories: [Category!]
  content(depth: Int): JSON
  publishedOn: DateTime
  authors: [User!]
  slug: String
  updatedAt: DateTime
  createdAt: DateTime
  _status: Post__status
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

enum Post__status {
  draft
  published
}

type Posts {
  docs: [Post]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input Post_where {
  title: Post_title_operator
  categories: Post_categories_operator
  content: Post_content_operator
  publishedOn: Post_publishedOn_operator
  authors: Post_authors_operator
  slug: Post_slug_operator
  updatedAt: Post_updatedAt_operator
  createdAt: Post_createdAt_operator
  _status: Post__status_operator
  id: Post_id_operator
  AND: [Post_where_and]
  OR: [Post_where_or]
}

input Post_title_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
}

input Post_categories_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Post_content_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
}

input Post_publishedOn_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Post_authors_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
}

input Post_slug_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Post_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Post_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Post__status_operator {
  equals: Post__status_Input
  not_equals: Post__status_Input
  in: [Post__status_Input]
  not_in: [Post__status_Input]
  all: [Post__status_Input]
  exists: Boolean
}

enum Post__status_Input {
  draft
  published
}

input Post_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Post_where_and {
  title: Post_title_operator
  categories: Post_categories_operator
  content: Post_content_operator
  publishedOn: Post_publishedOn_operator
  authors: Post_authors_operator
  slug: Post_slug_operator
  updatedAt: Post_updatedAt_operator
  createdAt: Post_createdAt_operator
  _status: Post__status_operator
  id: Post_id_operator
  AND: [Post_where_and]
  OR: [Post_where_or]
}

input Post_where_or {
  title: Post_title_operator
  categories: Post_categories_operator
  content: Post_content_operator
  publishedOn: Post_publishedOn_operator
  authors: Post_authors_operator
  slug: Post_slug_operator
  updatedAt: Post_updatedAt_operator
  createdAt: Post_createdAt_operator
  _status: Post__status_operator
  id: Post_id_operator
  AND: [Post_where_and]
  OR: [Post_where_or]
}

type postsDocAccess {
  fields: PostsDocAccessFields
  create: PostsCreateDocAccess
  read: PostsReadDocAccess
  update: PostsUpdateDocAccess
  delete: PostsDeleteDocAccess
  readVersions: PostsReadVersionsDocAccess
}

type PostsDocAccessFields {
  title: PostsDocAccessFields_title
  categories: PostsDocAccessFields_categories
  content: PostsDocAccessFields_content
  publishedOn: PostsDocAccessFields_publishedOn
  authors: PostsDocAccessFields_authors
  slug: PostsDocAccessFields_slug
  updatedAt: PostsDocAccessFields_updatedAt
  createdAt: PostsDocAccessFields_createdAt
  _status: PostsDocAccessFields__status
}

type PostsDocAccessFields_title {
  create: PostsDocAccessFields_title_Create
  read: PostsDocAccessFields_title_Read
  update: PostsDocAccessFields_title_Update
  delete: PostsDocAccessFields_title_Delete
}

type PostsDocAccessFields_title_Create {
  permission: Boolean!
}

type PostsDocAccessFields_title_Read {
  permission: Boolean!
}

type PostsDocAccessFields_title_Update {
  permission: Boolean!
}

type PostsDocAccessFields_title_Delete {
  permission: Boolean!
}

type PostsDocAccessFields_categories {
  create: PostsDocAccessFields_categories_Create
  read: PostsDocAccessFields_categories_Read
  update: PostsDocAccessFields_categories_Update
  delete: PostsDocAccessFields_categories_Delete
}

type PostsDocAccessFields_categories_Create {
  permission: Boolean!
}

type PostsDocAccessFields_categories_Read {
  permission: Boolean!
}

type PostsDocAccessFields_categories_Update {
  permission: Boolean!
}

type PostsDocAccessFields_categories_Delete {
  permission: Boolean!
}

type PostsDocAccessFields_content {
  create: PostsDocAccessFields_content_Create
  read: PostsDocAccessFields_content_Read
  update: PostsDocAccessFields_content_Update
  delete: PostsDocAccessFields_content_Delete
}

type PostsDocAccessFields_content_Create {
  permission: Boolean!
}

type PostsDocAccessFields_content_Read {
  permission: Boolean!
}

type PostsDocAccessFields_content_Update {
  permission: Boolean!
}

type PostsDocAccessFields_content_Delete {
  permission: Boolean!
}

type PostsDocAccessFields_publishedOn {
  create: PostsDocAccessFields_publishedOn_Create
  read: PostsDocAccessFields_publishedOn_Read
  update: PostsDocAccessFields_publishedOn_Update
  delete: PostsDocAccessFields_publishedOn_Delete
}

type PostsDocAccessFields_publishedOn_Create {
  permission: Boolean!
}

type PostsDocAccessFields_publishedOn_Read {
  permission: Boolean!
}

type PostsDocAccessFields_publishedOn_Update {
  permission: Boolean!
}

type PostsDocAccessFields_publishedOn_Delete {
  permission: Boolean!
}

type PostsDocAccessFields_authors {
  create: PostsDocAccessFields_authors_Create
  read: PostsDocAccessFields_authors_Read
  update: PostsDocAccessFields_authors_Update
  delete: PostsDocAccessFields_authors_Delete
}

type PostsDocAccessFields_authors_Create {
  permission: Boolean!
}

type PostsDocAccessFields_authors_Read {
  permission: Boolean!
}

type PostsDocAccessFields_authors_Update {
  permission: Boolean!
}

type PostsDocAccessFields_authors_Delete {
  permission: Boolean!
}

type PostsDocAccessFields_slug {
  create: PostsDocAccessFields_slug_Create
  read: PostsDocAccessFields_slug_Read
  update: PostsDocAccessFields_slug_Update
  delete: PostsDocAccessFields_slug_Delete
}

type PostsDocAccessFields_slug_Create {
  permission: Boolean!
}

type PostsDocAccessFields_slug_Read {
  permission: Boolean!
}

type PostsDocAccessFields_slug_Update {
  permission: Boolean!
}

type PostsDocAccessFields_slug_Delete {
  permission: Boolean!
}

type PostsDocAccessFields_updatedAt {
  create: PostsDocAccessFields_updatedAt_Create
  read: PostsDocAccessFields_updatedAt_Read
  update: PostsDocAccessFields_updatedAt_Update
  delete: PostsDocAccessFields_updatedAt_Delete
}

type PostsDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type PostsDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type PostsDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type PostsDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type PostsDocAccessFields_createdAt {
  create: PostsDocAccessFields_createdAt_Create
  read: PostsDocAccessFields_createdAt_Read
  update: PostsDocAccessFields_createdAt_Update
  delete: PostsDocAccessFields_createdAt_Delete
}

type PostsDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type PostsDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type PostsDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type PostsDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type PostsDocAccessFields__status {
  create: PostsDocAccessFields__status_Create
  read: PostsDocAccessFields__status_Read
  update: PostsDocAccessFields__status_Update
  delete: PostsDocAccessFields__status_Delete
}

type PostsDocAccessFields__status_Create {
  permission: Boolean!
}

type PostsDocAccessFields__status_Read {
  permission: Boolean!
}

type PostsDocAccessFields__status_Update {
  permission: Boolean!
}

type PostsDocAccessFields__status_Delete {
  permission: Boolean!
}

type PostsCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PostsReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PostsUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PostsDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PostsReadVersionsDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PostVersion {
  parent: Post
  version: PostVersion_Version
  createdAt: DateTime
  updatedAt: DateTime
  latest: Boolean
  id: String
}

type PostVersion_Version {
  title: String
  categories: [Category!]
  content(depth: Int): JSON
  publishedOn: DateTime
  authors: [User!]
  slug: String
  updatedAt: DateTime
  createdAt: DateTime
  _status: PostVersion_Version__status
}

enum PostVersion_Version__status {
  draft
  published
}

type versionsPosts {
  docs: [PostVersion]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input versionsPost_where {
  parent: versionsPost_parent_operator
  version__title: versionsPost_version__title_operator
  version__categories: versionsPost_version__categories_operator
  version__content: versionsPost_version__content_operator
  version__publishedOn: versionsPost_version__publishedOn_operator
  version__authors: versionsPost_version__authors_operator
  version__slug: versionsPost_version__slug_operator
  version__updatedAt: versionsPost_version__updatedAt_operator
  version__createdAt: versionsPost_version__createdAt_operator
  version___status: versionsPost_version___status_operator
  createdAt: versionsPost_createdAt_operator
  updatedAt: versionsPost_updatedAt_operator
  latest: versionsPost_latest_operator
  id: versionsPost_id_operator
  AND: [versionsPost_where_and]
  OR: [versionsPost_where_or]
}

input versionsPost_parent_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input versionsPost_version__title_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
}

input versionsPost_version__categories_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input versionsPost_version__content_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
}

input versionsPost_version__publishedOn_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input versionsPost_version__authors_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
}

input versionsPost_version__slug_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input versionsPost_version__updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input versionsPost_version__createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input versionsPost_version___status_operator {
  equals: versionsPost_version___status_Input
  not_equals: versionsPost_version___status_Input
  in: [versionsPost_version___status_Input]
  not_in: [versionsPost_version___status_Input]
  all: [versionsPost_version___status_Input]
  exists: Boolean
}

enum versionsPost_version___status_Input {
  draft
  published
}

input versionsPost_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input versionsPost_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input versionsPost_latest_operator {
  equals: Boolean
  not_equals: Boolean
  exists: Boolean
}

input versionsPost_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input versionsPost_where_and {
  parent: versionsPost_parent_operator
  version__title: versionsPost_version__title_operator
  version__categories: versionsPost_version__categories_operator
  version__content: versionsPost_version__content_operator
  version__publishedOn: versionsPost_version__publishedOn_operator
  version__authors: versionsPost_version__authors_operator
  version__slug: versionsPost_version__slug_operator
  version__updatedAt: versionsPost_version__updatedAt_operator
  version__createdAt: versionsPost_version__createdAt_operator
  version___status: versionsPost_version___status_operator
  createdAt: versionsPost_createdAt_operator
  updatedAt: versionsPost_updatedAt_operator
  latest: versionsPost_latest_operator
  id: versionsPost_id_operator
  AND: [versionsPost_where_and]
  OR: [versionsPost_where_or]
}

input versionsPost_where_or {
  parent: versionsPost_parent_operator
  version__title: versionsPost_version__title_operator
  version__categories: versionsPost_version__categories_operator
  version__content: versionsPost_version__content_operator
  version__publishedOn: versionsPost_version__publishedOn_operator
  version__authors: versionsPost_version__authors_operator
  version__slug: versionsPost_version__slug_operator
  version__updatedAt: versionsPost_version__updatedAt_operator
  version__createdAt: versionsPost_version__createdAt_operator
  version___status: versionsPost_version___status_operator
  createdAt: versionsPost_createdAt_operator
  updatedAt: versionsPost_updatedAt_operator
  latest: versionsPost_latest_operator
  id: versionsPost_id_operator
  AND: [versionsPost_where_and]
  OR: [versionsPost_where_or]
}

type PayloadPreference {
  id: String
  user: PayloadPreference_User_Relationship!
  key: String
  value: JSON
  updatedAt: DateTime
  createdAt: DateTime
}

type PayloadPreference_User_Relationship {
  relationTo: PayloadPreference_User_RelationTo
  value: PayloadPreference_User
}

enum PayloadPreference_User_RelationTo {
  users
}

union PayloadPreference_User = User

type PayloadPreferences {
  docs: [PayloadPreference]
  hasNextPage: Boolean
  hasPrevPage: Boolean
  limit: Int
  nextPage: Int
  offset: Int
  page: Int
  pagingCounter: Int
  prevPage: Int
  totalDocs: Int
  totalPages: Int
}

input PayloadPreference_where {
  user: PayloadPreference_user_Relation
  key: PayloadPreference_key_operator
  value: PayloadPreference_value_operator
  updatedAt: PayloadPreference_updatedAt_operator
  createdAt: PayloadPreference_createdAt_operator
  id: PayloadPreference_id_operator
  AND: [PayloadPreference_where_and]
  OR: [PayloadPreference_where_or]
}

input PayloadPreference_user_Relation {
  relationTo: PayloadPreference_user_Relation_RelationTo
  value: JSON
}

enum PayloadPreference_user_Relation_RelationTo {
  users
}

input PayloadPreference_key_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input PayloadPreference_value_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
  within: JSON
  intersects: JSON
  exists: Boolean
}

input PayloadPreference_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input PayloadPreference_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input PayloadPreference_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input PayloadPreference_where_and {
  user: PayloadPreference_user_Relation
  key: PayloadPreference_key_operator
  value: PayloadPreference_value_operator
  updatedAt: PayloadPreference_updatedAt_operator
  createdAt: PayloadPreference_createdAt_operator
  id: PayloadPreference_id_operator
  AND: [PayloadPreference_where_and]
  OR: [PayloadPreference_where_or]
}

input PayloadPreference_where_or {
  user: PayloadPreference_user_Relation
  key: PayloadPreference_key_operator
  value: PayloadPreference_value_operator
  updatedAt: PayloadPreference_updatedAt_operator
  createdAt: PayloadPreference_createdAt_operator
  id: PayloadPreference_id_operator
  AND: [PayloadPreference_where_and]
  OR: [PayloadPreference_where_or]
}

type payload_preferencesDocAccess {
  fields: PayloadPreferencesDocAccessFields
  create: PayloadPreferencesCreateDocAccess
  read: PayloadPreferencesReadDocAccess
  update: PayloadPreferencesUpdateDocAccess
  delete: PayloadPreferencesDeleteDocAccess
}

type PayloadPreferencesDocAccessFields {
  user: PayloadPreferencesDocAccessFields_user
  key: PayloadPreferencesDocAccessFields_key
  value: PayloadPreferencesDocAccessFields_value
  updatedAt: PayloadPreferencesDocAccessFields_updatedAt
  createdAt: PayloadPreferencesDocAccessFields_createdAt
}

type PayloadPreferencesDocAccessFields_user {
  create: PayloadPreferencesDocAccessFields_user_Create
  read: PayloadPreferencesDocAccessFields_user_Read
  update: PayloadPreferencesDocAccessFields_user_Update
  delete: PayloadPreferencesDocAccessFields_user_Delete
}

type PayloadPreferencesDocAccessFields_user_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_user_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_user_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_user_Delete {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_key {
  create: PayloadPreferencesDocAccessFields_key_Create
  read: PayloadPreferencesDocAccessFields_key_Read
  update: PayloadPreferencesDocAccessFields_key_Update
  delete: PayloadPreferencesDocAccessFields_key_Delete
}

type PayloadPreferencesDocAccessFields_key_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_key_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_key_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_key_Delete {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_value {
  create: PayloadPreferencesDocAccessFields_value_Create
  read: PayloadPreferencesDocAccessFields_value_Read
  update: PayloadPreferencesDocAccessFields_value_Update
  delete: PayloadPreferencesDocAccessFields_value_Delete
}

type PayloadPreferencesDocAccessFields_value_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_value_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_value_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_value_Delete {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_updatedAt {
  create: PayloadPreferencesDocAccessFields_updatedAt_Create
  read: PayloadPreferencesDocAccessFields_updatedAt_Read
  update: PayloadPreferencesDocAccessFields_updatedAt_Update
  delete: PayloadPreferencesDocAccessFields_updatedAt_Delete
}

type PayloadPreferencesDocAccessFields_updatedAt_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_updatedAt_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_updatedAt_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_updatedAt_Delete {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_createdAt {
  create: PayloadPreferencesDocAccessFields_createdAt_Create
  read: PayloadPreferencesDocAccessFields_createdAt_Read
  update: PayloadPreferencesDocAccessFields_createdAt_Update
  delete: PayloadPreferencesDocAccessFields_createdAt_Delete
}

type PayloadPreferencesDocAccessFields_createdAt_Create {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_createdAt_Read {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_createdAt_Update {
  permission: Boolean!
}

type PayloadPreferencesDocAccessFields_createdAt_Delete {
  permission: Boolean!
}

type PayloadPreferencesCreateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesReadDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesUpdateDocAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesDeleteDocAccess {
  permission: Boolean!
  where: JSONObject
}

type Access {
  canAccessAdmin: Boolean!
  users: usersAccess
  categories: categoriesAccess
  posts: postsAccess
  payload_preferences: payload_preferencesAccess
}

type usersAccess {
  fields: UsersFields
  create: UsersCreateAccess
  read: UsersReadAccess
  update: UsersUpdateAccess
  delete: UsersDeleteAccess
  unlock: UsersUnlockAccess
}

type UsersFields {
  firstName: UsersFields_firstName
  lastName: UsersFields_lastName
  roles: UsersFields_roles
  updatedAt: UsersFields_updatedAt
  createdAt: UsersFields_createdAt
  email: UsersFields_email
  password: UsersFields_password
}

type UsersFields_firstName {
  create: UsersFields_firstName_Create
  read: UsersFields_firstName_Read
  update: UsersFields_firstName_Update
  delete: UsersFields_firstName_Delete
}

type UsersFields_firstName_Create {
  permission: Boolean!
}

type UsersFields_firstName_Read {
  permission: Boolean!
}

type UsersFields_firstName_Update {
  permission: Boolean!
}

type UsersFields_firstName_Delete {
  permission: Boolean!
}

type UsersFields_lastName {
  create: UsersFields_lastName_Create
  read: UsersFields_lastName_Read
  update: UsersFields_lastName_Update
  delete: UsersFields_lastName_Delete
}

type UsersFields_lastName_Create {
  permission: Boolean!
}

type UsersFields_lastName_Read {
  permission: Boolean!
}

type UsersFields_lastName_Update {
  permission: Boolean!
}

type UsersFields_lastName_Delete {
  permission: Boolean!
}

type UsersFields_roles {
  create: UsersFields_roles_Create
  read: UsersFields_roles_Read
  update: UsersFields_roles_Update
  delete: UsersFields_roles_Delete
}

type UsersFields_roles_Create {
  permission: Boolean!
}

type UsersFields_roles_Read {
  permission: Boolean!
}

type UsersFields_roles_Update {
  permission: Boolean!
}

type UsersFields_roles_Delete {
  permission: Boolean!
}

type UsersFields_updatedAt {
  create: UsersFields_updatedAt_Create
  read: UsersFields_updatedAt_Read
  update: UsersFields_updatedAt_Update
  delete: UsersFields_updatedAt_Delete
}

type UsersFields_updatedAt_Create {
  permission: Boolean!
}

type UsersFields_updatedAt_Read {
  permission: Boolean!
}

type UsersFields_updatedAt_Update {
  permission: Boolean!
}

type UsersFields_updatedAt_Delete {
  permission: Boolean!
}

type UsersFields_createdAt {
  create: UsersFields_createdAt_Create
  read: UsersFields_createdAt_Read
  update: UsersFields_createdAt_Update
  delete: UsersFields_createdAt_Delete
}

type UsersFields_createdAt_Create {
  permission: Boolean!
}

type UsersFields_createdAt_Read {
  permission: Boolean!
}

type UsersFields_createdAt_Update {
  permission: Boolean!
}

type UsersFields_createdAt_Delete {
  permission: Boolean!
}

type UsersFields_email {
  create: UsersFields_email_Create
  read: UsersFields_email_Read
  update: UsersFields_email_Update
  delete: UsersFields_email_Delete
}

type UsersFields_email_Create {
  permission: Boolean!
}

type UsersFields_email_Read {
  permission: Boolean!
}

type UsersFields_email_Update {
  permission: Boolean!
}

type UsersFields_email_Delete {
  permission: Boolean!
}

type UsersFields_password {
  create: UsersFields_password_Create
  read: UsersFields_password_Read
  update: UsersFields_password_Update
  delete: UsersFields_password_Delete
}

type UsersFields_password_Create {
  permission: Boolean!
}

type UsersFields_password_Read {
  permission: Boolean!
}

type UsersFields_password_Update {
  permission: Boolean!
}

type UsersFields_password_Delete {
  permission: Boolean!
}

type UsersCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersReadAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type UsersUnlockAccess {
  permission: Boolean!
  where: JSONObject
}

type categoriesAccess {
  fields: CategoriesFields
  create: CategoriesCreateAccess
  read: CategoriesReadAccess
  update: CategoriesUpdateAccess
  delete: CategoriesDeleteAccess
}

type CategoriesFields {
  title: CategoriesFields_title
  updatedAt: CategoriesFields_updatedAt
  createdAt: CategoriesFields_createdAt
}

type CategoriesFields_title {
  create: CategoriesFields_title_Create
  read: CategoriesFields_title_Read
  update: CategoriesFields_title_Update
  delete: CategoriesFields_title_Delete
}

type CategoriesFields_title_Create {
  permission: Boolean!
}

type CategoriesFields_title_Read {
  permission: Boolean!
}

type CategoriesFields_title_Update {
  permission: Boolean!
}

type CategoriesFields_title_Delete {
  permission: Boolean!
}

type CategoriesFields_updatedAt {
  create: CategoriesFields_updatedAt_Create
  read: CategoriesFields_updatedAt_Read
  update: CategoriesFields_updatedAt_Update
  delete: CategoriesFields_updatedAt_Delete
}

type CategoriesFields_updatedAt_Create {
  permission: Boolean!
}

type CategoriesFields_updatedAt_Read {
  permission: Boolean!
}

type CategoriesFields_updatedAt_Update {
  permission: Boolean!
}

type CategoriesFields_updatedAt_Delete {
  permission: Boolean!
}

type CategoriesFields_createdAt {
  create: CategoriesFields_createdAt_Create
  read: CategoriesFields_createdAt_Read
  update: CategoriesFields_createdAt_Update
  delete: CategoriesFields_createdAt_Delete
}

type CategoriesFields_createdAt_Create {
  permission: Boolean!
}

type CategoriesFields_createdAt_Read {
  permission: Boolean!
}

type CategoriesFields_createdAt_Update {
  permission: Boolean!
}

type CategoriesFields_createdAt_Delete {
  permission: Boolean!
}

type CategoriesCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type CategoriesReadAccess {
  permission: Boolean!
  where: JSONObject
}

type CategoriesUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type CategoriesDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type postsAccess {
  fields: PostsFields
  create: PostsCreateAccess
  read: PostsReadAccess
  update: PostsUpdateAccess
  delete: PostsDeleteAccess
  readVersions: PostsReadVersionsAccess
}

type PostsFields {
  title: PostsFields_title
  categories: PostsFields_categories
  content: PostsFields_content
  publishedOn: PostsFields_publishedOn
  authors: PostsFields_authors
  slug: PostsFields_slug
  updatedAt: PostsFields_updatedAt
  createdAt: PostsFields_createdAt
  _status: PostsFields__status
}

type PostsFields_title {
  create: PostsFields_title_Create
  read: PostsFields_title_Read
  update: PostsFields_title_Update
  delete: PostsFields_title_Delete
}

type PostsFields_title_Create {
  permission: Boolean!
}

type PostsFields_title_Read {
  permission: Boolean!
}

type PostsFields_title_Update {
  permission: Boolean!
}

type PostsFields_title_Delete {
  permission: Boolean!
}

type PostsFields_categories {
  create: PostsFields_categories_Create
  read: PostsFields_categories_Read
  update: PostsFields_categories_Update
  delete: PostsFields_categories_Delete
}

type PostsFields_categories_Create {
  permission: Boolean!
}

type PostsFields_categories_Read {
  permission: Boolean!
}

type PostsFields_categories_Update {
  permission: Boolean!
}

type PostsFields_categories_Delete {
  permission: Boolean!
}

type PostsFields_content {
  create: PostsFields_content_Create
  read: PostsFields_content_Read
  update: PostsFields_content_Update
  delete: PostsFields_content_Delete
}

type PostsFields_content_Create {
  permission: Boolean!
}

type PostsFields_content_Read {
  permission: Boolean!
}

type PostsFields_content_Update {
  permission: Boolean!
}

type PostsFields_content_Delete {
  permission: Boolean!
}

type PostsFields_publishedOn {
  create: PostsFields_publishedOn_Create
  read: PostsFields_publishedOn_Read
  update: PostsFields_publishedOn_Update
  delete: PostsFields_publishedOn_Delete
}

type PostsFields_publishedOn_Create {
  permission: Boolean!
}

type PostsFields_publishedOn_Read {
  permission: Boolean!
}

type PostsFields_publishedOn_Update {
  permission: Boolean!
}

type PostsFields_publishedOn_Delete {
  permission: Boolean!
}

type PostsFields_authors {
  create: PostsFields_authors_Create
  read: PostsFields_authors_Read
  update: PostsFields_authors_Update
  delete: PostsFields_authors_Delete
}

type PostsFields_authors_Create {
  permission: Boolean!
}

type PostsFields_authors_Read {
  permission: Boolean!
}

type PostsFields_authors_Update {
  permission: Boolean!
}

type PostsFields_authors_Delete {
  permission: Boolean!
}

type PostsFields_slug {
  create: PostsFields_slug_Create
  read: PostsFields_slug_Read
  update: PostsFields_slug_Update
  delete: PostsFields_slug_Delete
}

type PostsFields_slug_Create {
  permission: Boolean!
}

type PostsFields_slug_Read {
  permission: Boolean!
}

type PostsFields_slug_Update {
  permission: Boolean!
}

type PostsFields_slug_Delete {
  permission: Boolean!
}

type PostsFields_updatedAt {
  create: PostsFields_updatedAt_Create
  read: PostsFields_updatedAt_Read
  update: PostsFields_updatedAt_Update
  delete: PostsFields_updatedAt_Delete
}

type PostsFields_updatedAt_Create {
  permission: Boolean!
}

type PostsFields_updatedAt_Read {
  permission: Boolean!
}

type PostsFields_updatedAt_Update {
  permission: Boolean!
}

type PostsFields_updatedAt_Delete {
  permission: Boolean!
}

type PostsFields_createdAt {
  create: PostsFields_createdAt_Create
  read: PostsFields_createdAt_Read
  update: PostsFields_createdAt_Update
  delete: PostsFields_createdAt_Delete
}

type PostsFields_createdAt_Create {
  permission: Boolean!
}

type PostsFields_createdAt_Read {
  permission: Boolean!
}

type PostsFields_createdAt_Update {
  permission: Boolean!
}

type PostsFields_createdAt_Delete {
  permission: Boolean!
}

type PostsFields__status {
  create: PostsFields__status_Create
  read: PostsFields__status_Read
  update: PostsFields__status_Update
  delete: PostsFields__status_Delete
}

type PostsFields__status_Create {
  permission: Boolean!
}

type PostsFields__status_Read {
  permission: Boolean!
}

type PostsFields__status_Update {
  permission: Boolean!
}

type PostsFields__status_Delete {
  permission: Boolean!
}

type PostsCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type PostsReadAccess {
  permission: Boolean!
  where: JSONObject
}

type PostsUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type PostsDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type PostsReadVersionsAccess {
  permission: Boolean!
  where: JSONObject
}

type payload_preferencesAccess {
  fields: PayloadPreferencesFields
  create: PayloadPreferencesCreateAccess
  read: PayloadPreferencesReadAccess
  update: PayloadPreferencesUpdateAccess
  delete: PayloadPreferencesDeleteAccess
}

type PayloadPreferencesFields {
  user: PayloadPreferencesFields_user
  key: PayloadPreferencesFields_key
  value: PayloadPreferencesFields_value
  updatedAt: PayloadPreferencesFields_updatedAt
  createdAt: PayloadPreferencesFields_createdAt
}

type PayloadPreferencesFields_user {
  create: PayloadPreferencesFields_user_Create
  read: PayloadPreferencesFields_user_Read
  update: PayloadPreferencesFields_user_Update
  delete: PayloadPreferencesFields_user_Delete
}

type PayloadPreferencesFields_user_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_user_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_user_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_user_Delete {
  permission: Boolean!
}

type PayloadPreferencesFields_key {
  create: PayloadPreferencesFields_key_Create
  read: PayloadPreferencesFields_key_Read
  update: PayloadPreferencesFields_key_Update
  delete: PayloadPreferencesFields_key_Delete
}

type PayloadPreferencesFields_key_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_key_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_key_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_key_Delete {
  permission: Boolean!
}

type PayloadPreferencesFields_value {
  create: PayloadPreferencesFields_value_Create
  read: PayloadPreferencesFields_value_Read
  update: PayloadPreferencesFields_value_Update
  delete: PayloadPreferencesFields_value_Delete
}

type PayloadPreferencesFields_value_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_value_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_value_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_value_Delete {
  permission: Boolean!
}

type PayloadPreferencesFields_updatedAt {
  create: PayloadPreferencesFields_updatedAt_Create
  read: PayloadPreferencesFields_updatedAt_Read
  update: PayloadPreferencesFields_updatedAt_Update
  delete: PayloadPreferencesFields_updatedAt_Delete
}

type PayloadPreferencesFields_updatedAt_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_updatedAt_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_updatedAt_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_updatedAt_Delete {
  permission: Boolean!
}

type PayloadPreferencesFields_createdAt {
  create: PayloadPreferencesFields_createdAt_Create
  read: PayloadPreferencesFields_createdAt_Read
  update: PayloadPreferencesFields_createdAt_Update
  delete: PayloadPreferencesFields_createdAt_Delete
}

type PayloadPreferencesFields_createdAt_Create {
  permission: Boolean!
}

type PayloadPreferencesFields_createdAt_Read {
  permission: Boolean!
}

type PayloadPreferencesFields_createdAt_Update {
  permission: Boolean!
}

type PayloadPreferencesFields_createdAt_Delete {
  permission: Boolean!
}

type PayloadPreferencesCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesReadAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type PayloadPreferencesDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type Mutation {
  createUser(data: mutationUserInput!, draft: Boolean): User
  updateUser(id: String!, autosave: Boolean, data: mutationUserUpdateInput!, draft: Boolean): User
  deleteUser(id: String!): User
  refreshTokenUser(token: String): usersRefreshedUser
  logoutUser: String
  unlockUser(email: String!): Boolean!
  loginUser(email: String, password: String): usersLoginResult
  forgotPasswordUser(disableEmail: Boolean, email: String!, expiration: Int): Boolean!
  resetPasswordUser(password: String, token: String): usersResetPassword
  verifyEmailUser(token: String): Boolean
  createCategory(data: mutationCategoryInput!, draft: Boolean): Category
  updateCategory(id: String!, autosave: Boolean, data: mutationCategoryUpdateInput!, draft: Boolean): Category
  deleteCategory(id: String!): Category
  createPost(data: mutationPostInput!, draft: Boolean): Post
  updatePost(id: String!, autosave: Boolean, data: mutationPostUpdateInput!, draft: Boolean): Post
  deletePost(id: String!): Post
  restoreVersionPost(id: String): Post
  createPayloadPreference(data: mutationPayloadPreferenceInput!, draft: Boolean): PayloadPreference
  updatePayloadPreference(id: String!, autosave: Boolean, data: mutationPayloadPreferenceUpdateInput!, draft: Boolean): PayloadPreference
  deletePayloadPreference(id: String!): PayloadPreference
}

input mutationUserInput {
  firstName: String
  lastName: String
  roles: [User_roles_MutationInput]
  updatedAt: String
  createdAt: String
  email: String!
  resetPasswordToken: String
  resetPasswordExpiration: String
  salt: String
  hash: String
  loginAttempts: Float
  lockUntil: String
  password: String!
}

enum User_roles_MutationInput {
  admin
  user
}

input mutationUserUpdateInput {
  firstName: String
  lastName: String
  roles: [UserUpdate_roles_MutationInput]
  updatedAt: String
  createdAt: String
  email: String
  resetPasswordToken: String
  resetPasswordExpiration: String
  salt: String
  hash: String
  loginAttempts: Float
  lockUntil: String
  password: String
}

enum UserUpdate_roles_MutationInput {
  admin
  user
}

type usersRefreshedUser {
  exp: Int
  refreshedToken: String
  user: usersJWT
}

type usersJWT {
  roles: [usersJWT_roles!]
  email: EmailAddress!
  collection: String!
}

enum usersJWT_roles {
  admin
  user
}

type usersLoginResult {
  exp: Int
  token: String
  user: User
}

type usersResetPassword {
  token: String
  user: User
}

input mutationCategoryInput {
  title: String
  updatedAt: String
  createdAt: String
}

input mutationCategoryUpdateInput {
  title: String
  updatedAt: String
  createdAt: String
}

input mutationPostInput {
  title: String!
  categories: [String]
  content: JSON!
  publishedOn: String
  authors: [String]
  slug: String
  updatedAt: String
  createdAt: String
  _status: Post__status_MutationInput
}

enum Post__status_MutationInput {
  draft
  published
}

input mutationPostUpdateInput {
  title: String
  categories: [String]
  content: JSON
  publishedOn: String
  authors: [String]
  slug: String
  updatedAt: String
  createdAt: String
  _status: PostUpdate__status_MutationInput
}

enum PostUpdate__status_MutationInput {
  draft
  published
}

input mutationPayloadPreferenceInput {
  user: PayloadPreference_UserRelationshipInput
  key: String
  value: JSON
  updatedAt: String
  createdAt: String
}

input PayloadPreference_UserRelationshipInput {
  relationTo: PayloadPreference_UserRelationshipInputRelationTo
  value: JSON
}

enum PayloadPreference_UserRelationshipInputRelationTo {
  users
}

input mutationPayloadPreferenceUpdateInput {
  user: PayloadPreferenceUpdate_UserRelationshipInput
  key: String
  value: JSON
  updatedAt: String
  createdAt: String
}

input PayloadPreferenceUpdate_UserRelationshipInput {
  relationTo: PayloadPreferenceUpdate_UserRelationshipInputRelationTo
  value: JSON
}

enum PayloadPreferenceUpdate_UserRelationshipInputRelationTo {
  users
}